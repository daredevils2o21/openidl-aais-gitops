- name: Generate pre-register-users script
  template:
    src: templates/pre-register-users.sh.j2
    dest: ./pre-register-users.sh
    mode: 0755

- name: Create configmap for network configuration file
  shell: |
    kubectl -n vault create configmap pre-register-users-script --from-file=pre-register-users.sh=./pre-register-users.sh

- name: Create secret for credentials
  community.kubernetes.k8s:
    state: present
    definition: 
      apiVersion: v1
      kind: Secret
      type: Opaque             
      metadata:
        name: vault-user-creds
        namespace: vault   
      data:
        VAULT_ROOT_TOKEN: "{{ unsealkey['content'] | b64decode | regex_findall('Initial Root Token: (.*)')|last | b64encode }}"
        VAULT_CONFIG_USER: "{{ vault_config_user | b64encode }}"
        VAULT_CONFIG_USER_TOKEN: "{{ vault_config_user_token | b64encode }}"
        VAULT_KVS_USER: "{{ vault_kvs_user | b64encode }}"
        VAULT_KVS_USER_TOKEN: "{{ vault_kvs_user_token | b64encode }}"

- name: Launch Pod for pre-register-users
  community.kubernetes.k8s:
    state: present
    wait: yes
    definition:
      apiVersion: v1
      kind: Pod
      metadata:
        name: pre-register-user-script
        namespace: vault
      spec:
        containers:
        - name: script
          image: hyperledger/fabric-ca:1.5.1
          env:
          - name: VAULT_CONFIG_USER
            valueFrom:
              secretKeyRef:
                name: vault-user-creds
                key: VAULT_CONFIG_USER
          - name: VAULT_ROOT_TOKEN
            valueFrom:
              secretKeyRef:
                name: vault-user-creds
                key: VAULT_ROOT_TOKEN
          - name: VAULT_CONFIG_USER_TOKEN
            valueFrom:
              secretKeyRef:
                name: vault-user-creds
                key: VAULT_CONFIG_USER_TOKEN
          - name: VAULT_KVS_USER
            valueFrom:
              secretKeyRef:
                name: vault-user-creds
                key: VAULT_KVS_USER
          - name: VAULT_KVS_USER_TOKEN
            valueFrom:
              secretKeyRef:
                name: vault-user-creds
                key: VAULT_KVS_USER_TOKEN
          - name: ORG_NAME
            value: "{{ network.org_name }}"
          - name: VAULT_URL
            value: "http://vault.{{ env }}.{{ internal_domain }}"
          command: ["sh", "-c"]
          args: 
          - |-
            #!/bin/bash -e
            cd /home/config
            apk add bash curl jq
            ./pre-register-users.sh -N {{ network.org_name }}-admin \
            -P {{ network.org_name }}-adminpw \
            -p {{ ca_user_token }} \
            -u ca.{{ network.org_name }}-net.{{ network.org_name }}.{{ env }}.{{ domain }}:8443 \
            -n ca.{{ network.org_name }}-net \
            -o {{ network.org_name }} \
            -m {{ network.org_name }}MSP \
            -U "openidl-aais-insurance-data-manager-ibp-2.0 openidl-aais-data-call-app-ibp-2.0 openidl-aais-data-call-processor-ibp-2.0" \
            -V http://vault.{{ env }}.{{ internal_domain }} \
            -l {{ vault_kvs_user }} \
            -t {{ vault_kvs_user_token }} \
            -b kvs-{{ network.org_name }} \
            -q kvs-{{ network.org_name }}
            -w vault
          volumeMounts:
          - name: vault-user-script
            mountPath: "/home/config/"
            readOnly: true
        volumes:
        - name: vault-user-script
          configMap:
            name: pre-register-users-script
            defaultMode: 0777
        restartPolicy: Never
        backoffLimit: 0

- name: Pod logs
  shell: |
    kubectl -n vault logs -f pre-register-user-script
  register: pod_logs

- name: Pod logs 
  debug:
    msg: '{{ pod_logs.stdout_lines }}'

- name: Upload config user credentials to secrets manager
  shell: |
    aws secretsmanager create-secret --name {{ env }}-{{ network.org_name }}-config-vault-1 --description "Vault Credentials for config user" --secret-string {"url":"http://vault.{{ env }}.{{ internal_domain }}","username":"{{ vault_config_user }}","password":"{{ vault_config_user_token }}","orgName":"config","vaultPath":"config-{{ network.org_name }}","apiVersion":"v1"}

- name: Upload config user credentials to secrets manager
  shell: |
    aws secretsmanager create-secret --name {{ env }}-{{ network.org_name }}-kvs-vault-1 --description "Vault Credentials for kvs user" --secret-string {"url":"http://vault.{{ env }}.{{ internal_domain }}","username":"{{ vault_kvs_user }}","password":"{{ vault_kvs_user_token }}","orgName":"kvs","vaultPath":"kvs-{{ network.org_name }}","apiVersion":"v1"}

- name: Delete user script pod
  community.kubernetes.k8s:
    name: pre-register-user-script
    namespace: vault
    api_version: v1
    kind: Pod
    state: absent
    wait: yes

- name: Delete Script Configmap
  community.kubernetes.k8s:
    name: pre-register-users-script
    namespace: vault
    api_version: v1
    kind: ConfigMap
    state: absent

- name: Delete User Creds Secret
  community.kubernetes.k8s:
    name: vault-user-creds
    namespace: vault
    api_version: v1
    kind: Secret
    state: absent

- name: Delete add-vault-user-script
  file:
    state: absent
    path: ./add-vault-user.sh

- name: Run pre-register users script
  shell: |
    kubectl -n openidl-baf run -it --rm pre-register-users-pod --image=hyperledger/fabric-ca:1.5.1 --restart=Never -- sh -c "`apk add bash curl jq && ./pre-register-users.sh -N {{ network.org_name }}-admin -P {{ network.org_name }}-adminpw -p {{ ca_user_token }} -u ca.{{ network.org_name }}-net.{{ network.org_name }}.{{ env }}.{{ domain }}:8443 -n ca.{{ network.org_name }}-net -o {{ network.org_name }} -m {{ network.org_name }}MSP -U "openidl-aais-insurance-data-manager-ibp-2.0 openidl-aais-data-call-app-ibp-2.0 openidl-aais-data-call-processor-ibp-2.0" -V http://vault.dev.{{ internal_domain }} -l {{ vault_kvs_user }} -t {{ vault_kvs_user_token }} -b {{ network.org_name }} -q "kvs-{{ network.org_name }}" -w vault`"
  register: output
