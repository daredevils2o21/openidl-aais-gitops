app_bastion_ssh_key="ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDJTI6JSWyleIzZhyBY2cRj92csqiGMTtg+dFjL5OvbInBibmvDDND7DKIyUfvEITBnxKicxWzZBOxFm5HrQMQWfGrszbDT3f+g/sWrCKcwOm4wWNGf/JjTVnCP1DopFmBzAYJ+JYJ3DMTnl261SPjV9HtTtXe/xzBrJIVMAKdO6KUWmF8q7x25Gq9GmrJmoEmqv6XxAqMYS90bGqdsxTsJwjh6yU3jKyhQBazmO4aEzscaNELXM/X52zcDulYa0ulQ2hJ0B72D/TmCJAJK7qkQ77qDcpvByKnaxcl+7aVQvcRYfOv0jYDAEyZb0hT3LSkEjuBwJnsJU26urHFCEBoDXg4+lwFL/UA/ofEfZbC18LbpVTCjhxQgIyVo6f5mcp+lzRSdPeTR+RMXnwecQHJjkG9Gl76M2uPbeIMt17PExASVdb6sl16qtMmGAKlP4RqZfI/HuZkeI8mdWiap9J/HUsn+Dq9JPq88yKtR7/Vxj1XSGbmaq15sONsAmBnjPHE= rajesh.sanjeevi@T480s-12"
blk_bastion_ssh_key="ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDJTI6JSWyleIzZhyBY2cRj92csqiGMTtg+dFjL5OvbInBibmvDDND7DKIyUfvEITBnxKicxWzZBOxFm5HrQMQWfGrszbDT3f+g/sWrCKcwOm4wWNGf/JjTVnCP1DopFmBzAYJ+JYJ3DMTnl261SPjV9HtTtXe/xzBrJIVMAKdO6KUWmF8q7x25Gq9GmrJmoEmqv6XxAqMYS90bGqdsxTsJwjh6yU3jKyhQBazmO4aEzscaNELXM/X52zcDulYa0ulQ2hJ0B72D/TmCJAJK7qkQ77qDcpvByKnaxcl+7aVQvcRYfOv0jYDAEyZb0hT3LSkEjuBwJnsJU26urHFCEBoDXg4+lwFL/UA/ofEfZbC18LbpVTCjhxQgIyVo6f5mcp+lzRSdPeTR+RMXnwecQHJjkG9Gl76M2uPbeIMt17PExASVdb6sl16qtMmGAKlP4RqZfI/HuZkeI8mdWiap9J/HUsn+Dq9JPq88yKtR7/Vxj1XSGbmaq15sONsAmBnjPHE= rajesh.sanjeevi@T480s-12"
app_cluster_map_users= ["arn:aws:iam::572551282206:user/rajesh.sanjeevi@itpeoplecorp.com"]
blk_cluster_map_users= ["arn:aws:iam::572551282206:user/rajesh.sanjeevi@itpeoplecorp.com"]
app_cluster_map_roles=[]
blk_cluster_map_roles=[]
aws_env="dev"
aws_region="us-west-2"
aws_role_arn="arn:aws:iam::572551282206:role/tf_automation"
aws_user_arn="arn:aws:iam::572551282206:user/terraform_user"
app_eks_worker_nodes_ssh_key="ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDJTI6JSWyleIzZhyBY2cRj92csqiGMTtg+dFjL5OvbInBibmvDDND7DKIyUfvEITBnxKicxWzZBOxFm5HrQMQWfGrszbDT3f+g/sWrCKcwOm4wWNGf/JjTVnCP1DopFmBzAYJ+JYJ3DMTnl261SPjV9HtTtXe/xzBrJIVMAKdO6KUWmF8q7x25Gq9GmrJmoEmqv6XxAqMYS90bGqdsxTsJwjh6yU3jKyhQBazmO4aEzscaNELXM/X52zcDulYa0ulQ2hJ0B72D/TmCJAJK7qkQ77qDcpvByKnaxcl+7aVQvcRYfOv0jYDAEyZb0hT3LSkEjuBwJnsJU26urHFCEBoDXg4+lwFL/UA/ofEfZbC18LbpVTCjhxQgIyVo6f5mcp+lzRSdPeTR+RMXnwecQHJjkG9Gl76M2uPbeIMt17PExASVdb6sl16qtMmGAKlP4RqZfI/HuZkeI8mdWiap9J/HUsn+Dq9JPq88yKtR7/Vxj1XSGbmaq15sONsAmBnjPHE= rajesh.sanjeevi@T480s-12"
blk_eks_worker_nodes_ssh_key="ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDJTI6JSWyleIzZhyBY2cRj92csqiGMTtg+dFjL5OvbInBibmvDDND7DKIyUfvEITBnxKicxWzZBOxFm5HrQMQWfGrszbDT3f+g/sWrCKcwOm4wWNGf/JjTVnCP1DopFmBzAYJ+JYJ3DMTnl261SPjV9HtTtXe/xzBrJIVMAKdO6KUWmF8q7x25Gq9GmrJmoEmqv6XxAqMYS90bGqdsxTsJwjh6yU3jKyhQBazmO4aEzscaNELXM/X52zcDulYa0ulQ2hJ0B72D/TmCJAJK7qkQ77qDcpvByKnaxcl+7aVQvcRYfOv0jYDAEyZb0hT3LSkEjuBwJnsJU26urHFCEBoDXg4+lwFL/UA/ofEfZbC18LbpVTCjhxQgIyVo6f5mcp+lzRSdPeTR+RMXnwecQHJjkG9Gl76M2uPbeIMt17PExASVdb6sl16qtMmGAKlP4RqZfI/HuZkeI8mdWiap9J/HUsn+Dq9JPq88yKtR7/Vxj1XSGbmaq15sONsAmBnjPHE= rajesh.sanjeevi@T480s-12"
userpool_email_source_arn="arn:aws:ses:us-west-2:572551282206:identity/rajesh.sanjeevi@itpeoplecorp.com"
ses_email_identity="rajesh.sanjeevi@itpeoplecorp.com"
aws_account_number = "572551282206"
#node type like aais, carr (carrier), anlt (analytics)
node_type = "aais"
#--------------------------------------------------------------------------------------------------------------------
#Application cluster VPC specifications
app_vpc_cidr           = "10.10.0.0/16"
app_availability_zones = ["us-west-2a", "us-west-2b"]
app_public_subnets     = ["10.10.1.0/24", "10.10.2.0/24"]
app_private_subnets    = ["10.10.3.0/24", "10.10.4.0/24"]

#VPC Network ACL traffic rules to be configured in the VPC
#you may need to update these rules as when new networks are added
app_public_nacl_rules = {
  inbound = [{
    rule_number = 100
    rule_action = "allow"
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_block  = "10.10.0.0/16"
    },
    {
    rule_number = 101
    rule_action = "allow"
    from_port   = 443
    to_port     = 443
    protocol    = "tcp"
    cidr_block  = "0.0.0.0/0"
    },
    {
      rule_number = 102
      rule_action = "allow"
      from_port   = 1024
      to_port     = 65535
      protocol    = "tcp"
      cidr_block  = "0.0.0.0/0"
  },
  {
    rule_number = 103
    rule_action = "allow"
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_block  = "0.0.0.0/0"
    },
  {
    rule_number = 104
    rule_action = "allow"
    from_port   = 8443
    to_port     = 8443
    protocol    = "tcp"
    cidr_block  = "0.0.0.0/0" #related to EKS
    }],
  outbound = [{
    rule_number = 100
    rule_action = "allow"
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_block  = "10.10.0.0/16"
    },
    {
    rule_number = 101
    rule_action = "allow"
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_block  = "0.0.0.0/0"
    },
    {
    rule_number = 102
    rule_action = "allow"
    from_port   = 443
    to_port     = 443
    protocol    = "tcp"
    cidr_block  = "0.0.0.0/0"
    },
    {
      rule_number = 103
      rule_action = "allow"
      from_port   = 32768
      to_port     = 65535
      protocol    = "tcp"
      cidr_block  = "0.0.0.0/0"
  },
  {
    rule_number = 104
    rule_action = "allow"
    from_port   = 8443
    to_port     = 8443
    protocol    = "tcp"
    cidr_block  = "0.0.0.0/0" #related to EKS
    }]
}
app_private_nacl_rules = {
  inbound = [{
    rule_number = 100
    rule_action = "allow"
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_block  = "10.10.0.0/16"
    },
    {
    rule_number = 101
    rule_action = "allow"
    from_port   = 443
    to_port     = 443
    protocol    = "tcp"
    cidr_block  = "10.10.0.0/16"
    },
    {
    rule_number = 102
    rule_action = "allow"
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_block  = "10.10.0.0/16"
    },
    {
      rule_number = 103
      rule_action = "allow"
      from_port   = 1024
      to_port     = 65535
      protocol    = "tcp"
      cidr_block  = "0.0.0.0/0" #related to EKS
    },
  {
    rule_number = 104
    rule_action = "allow"
    from_port   = 8443
    to_port     = 8443
    protocol    = "tcp"
    cidr_block  = "0.0.0.0/0" #related to EKS
    }],
  outbound = [{
    rule_number = 100
    rule_action = "allow"
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_block  = "10.10.0.0/16"
    },
    {
      rule_number = 101
      rule_action = "allow"
      from_port   = 443
      to_port     = 443
      protocol    = "tcp"
      cidr_block  = "0.0.0.0/0"
    },
    {
      rule_number = 102
      rule_action = "allow"
      from_port   = 80
      to_port     = 80
      protocol    = "tcp"
      cidr_block  = "0.0.0.0/0"
    },
    {
      rule_number = 103
      rule_action = "allow"
      from_port   = 32768
      to_port     = 65535
      protocol    = "tcp"
      cidr_block  = "0.0.0.0/0"
    },
  {
    rule_number = 104
    rule_action = "allow"
    from_port   = 8443
    to_port     = 8443
    protocol    = "tcp"
    cidr_block  = "0.0.0.0/0" #related to EKS
    }]
}
#-------------------------------------------------------------------------------------------------------------------

#Blockchain cluster VPC specifications
blk_vpc_cidr           = "10.20.0.0/16"
blk_availability_zones = ["us-west-2a", "us-west-2b"]
blk_public_subnets     = ["10.20.1.0/24", "10.20.2.0/24"]
blk_private_subnets    = ["10.20.3.0/24", "10.20.4.0/24"]

#VPC Network ACL traffic rules to be configured in the VPC
#you may need to update these rules as when new networks are added
blk_public_nacl_rules = {
  inbound = [{
    rule_number = 100
    rule_action = "allow"
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_block  = "10.20.0.0/16"
    },
    {
    rule_number = 101
    rule_action = "allow"
    from_port   = 443
    to_port     = 443
    protocol    = "tcp"
    cidr_block  = "0.0.0.0/0"
    },
    {
      rule_number = 102
      rule_action = "allow"
      from_port   = 1024
      to_port     = 65535
      protocol    = "tcp"
      cidr_block  = "0.0.0.0/0"
  },
  {
    rule_number = 103
    rule_action = "allow"
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_block  = "0.0.0.0/0"
    },
  {
    rule_number = 104
    rule_action = "allow"
    from_port   = 8443
    to_port     = 8443
    protocol    = "tcp"
    cidr_block  = "0.0.0.0/0" #related to EKS
    }],
  outbound = [{
    rule_number = 100
    rule_action = "allow"
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_block  = "10.20.0.0/16"
    },
    {
    rule_number = 101
    rule_action = "allow"
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_block  = "0.0.0.0/0"
    },
    {
    rule_number = 102
    rule_action = "allow"
    from_port   = 443
    to_port     = 443
    protocol    = "tcp"
    cidr_block  = "0.0.0.0/0"
    },
    {
      rule_number = 103
      rule_action = "allow"
      from_port   = 32768
      to_port     = 65535
      protocol    = "tcp"
      cidr_block  = "0.0.0.0/0"
  },
  {
    rule_number = 104
    rule_action = "allow"
    from_port   = 8443
    to_port     = 8443
    protocol    = "tcp"
    cidr_block  = "0.0.0.0/0" #need to verify, related to EKS
    }]
}
blk_private_nacl_rules = {
  inbound = [{
    rule_number = 100
    rule_action = "allow"
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_block  = "10.20.0.0/16"
    }, {
    rule_number = 101
    rule_action = "allow"
    from_port   = 443
    to_port     = 443
    protocol    = "tcp"
    cidr_block  = "10.20.0.0/16"
    },
    {
    rule_number = 102
    rule_action = "allow"
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_block  = "10.20.0.0/16"
    },
    {
      rule_number = 103
      rule_action = "allow"
      from_port   = 1024
      to_port     = 65535
      protocol    = "tcp"
      cidr_block  = "0.0.0.0/0"
    },
  {
    rule_number = 104
    rule_action = "allow"
    from_port   = 8443
    to_port     = 8443
    protocol    = "tcp"
    cidr_block  = "0.0.0.0/0" #related to EKS
    }],
  outbound = [{
    rule_number = 100
    rule_action = "allow"
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_block  = "10.20.0.0/16"
    },
    {
      rule_number = 101
      rule_action = "allow"
      from_port   = 443
      to_port     = 443
      protocol    = "tcp"
      cidr_block  = "0.0.0.0/0"
    },
    {
      rule_number = 102
      rule_action = "allow"
      from_port   = 80
      to_port     = 80
      protocol    = "tcp"
      cidr_block  = "0.0.0.0/0"
    },
    {
      rule_number = 103
      rule_action = "allow"
      from_port   = 32768
      to_port     = 65535
      protocol    = "tcp"
      cidr_block  = "0.0.0.0/0"
    },
  {
    rule_number = 104
    rule_action = "allow"
    from_port   = 8443
    to_port     = 8443
    protocol    = "tcp"
    cidr_block  = "0.0.0.0/0" #need to verify, related to EKS
    }]
}
#--------------------------------------------------------------------------------------------------------------------

#Default security group assigned/used when a resource is created without any security group attached
default_sg_rules = {
  ingress = [{
    cidr_blocks = "10.10.0.0/16"
    description = "Inbound SSH traffic"
    from_port   = "22"
    to_port     = "22"
    protocol    = "tcp"
  },
  {
    cidr_blocks = "10.20.0.0/16"
    description = "Inbound SSH traffic"
    from_port   = "22"
    to_port     = "22"
    protocol    = "tcp"
  }],
  egress = [{
    cidr_blocks = "0.0.0.0/0"
    description = "Outbound SSH traffic"
    from_port   = "80"
    to_port     = "80"
    protocol    = "tcp"
  },
  {
    cidr_blocks = "0.0.0.0/0"
    description = "Outbound SSH traffic"
    from_port   = "443"
    to_port     = "443"
    protocol    = "tcp"
  }]
}
#--------------------------------------------------------------------------------------------------------------------

#Bastion host specifications
#application cluster bastion host specifications
app_bastion_sg_ingress =  [{rule="ssh-tcp", cidr_blocks = "10.10.0.0/16"},]
app_bastion_sg_egress =   [{rule="https-443-tcp", cidr_blocks = "0.0.0.0/0"},
                       {rule="http-80-tcp", cidr_blocks = "0.0.0.0/0"},
                       {rule="ssh-tcp", cidr_blocks = "10.10.0.0/16"}]

#blockchain cluster bastion host specifications
#bastion host security specifications
blk_bastion_sg_ingress =  [{rule="ssh-tcp", cidr_blocks = "10.20.0.0/16"},]
blk_bastion_sg_egress =   [{rule="https-443-tcp", cidr_blocks = "0.0.0.0/0"},
                       {rule="http-80-tcp", cidr_blocks = "0.0.0.0/0"},
                       {rule="ssh-tcp", cidr_blocks = "10.20.0.0/16"}]

#--------------------------------------------------------------------------------------------------------------------

#Route53 (PUBLIC) DNS domain related specifications (domain registrar: aws/others, registered: yes/no)
domain_info = {
  domain_registrar = "aws", # alternate: aws
  domain_name: "aaisdirect-demo.com", #primary domain registered
  registered = "yes" #alternate: no
  app_sub_domain_name: "openidl", #subdomain, maps to NLB in app_vpc used with eks cluster
  blk_sub_domain_names = ["orderer0", "orderer1", "orderer2", "aais-peer", "aais-ca"] #maps to NLB in blk_vpc used with eks cluster
  comments: "the aais open idl domain name resolution for application"
}

#Route53 (PRIVATE) DNS resolution related specifications
internal_domain = "internal.aaisdirect-demo.com"
internal_subdomain = ["orderer0", "aais.peer", "aais.ca"]
#-------------------------------------------------------------------------------------------------------------------

#Transit gateway  specifications
tgw_amazon_side_asn = "64532"
# routes from application cluster private subnets to other vpc private subnet cidrs (TGW route table updates)
app_tgw_routes = [{destination_cidr_block = "10.20.0.0/16"}]

#routes from blockchain cluster private subnets to other vpc private subnet cidrs (TGW route table updates)
blk_tgw_routes = [{destination_cidr_block = "10.10.0.0/16"}]

#routes from application cluster private subnets to other vpc private subnet cidrs (subnet route table updates)
app_tgw_destination_cidr = ["10.20.0.0/16"]

#routes from blockchain cluster private subnets to other vpc private subnet cidrs (subnet route table updates)
blk_tgw_destination_cidr = ["10.10.0.0/16"]

#--------------------------------------------------------------------------------------------------------------------

#Cognito specifications
userpool_name                = "aais-openidl-userpool-demo"
client_app_name              = "aais-openidl-demo"
client_callback_urls         = ["https://dev-aais-openidl.aaisdirect.com/callback", "https://dev-aais-openidl.aaisdirect.com/home"]
client_default_redirect_url  = "https://dev-aais-openidl.aaisdirect.com/home"
client_logout_urls           = ["https://dev-aais-openidl.aaisdirect.com/logut"]
cognito_domain               = "dev-aais-openidl-aaisdirect"
#--------------------------------------------------------------------------------------------------------------------

#application specific traffic to be allowed in app cluster worker nodes
app_eks_workers_app_sg_ingress = []
app_eks_workers_app_sg_egress = []

#application specific traffic to be allowed in blk cluster worker nodes
blk_eks_workers_app_sg_ingress = []
blk_eks_workers_app_sg_egress = []
#--------------------------------------------------------------------------------------------------------------------

# application cluster EKS specifications
app_cluster_name              = "app-cluster"
app_cluster_version           = "1.19"
app_cluster_service_ipv4_cidr = "172.16.0.0/16"
#--------------------------------------------------------------------------------------------------------------------

# blockchain cluster EKS specifications
blk_cluster_name              = "blk-cluster"
blk_cluster_version           = "1.19"
blk_cluster_service_ipv4_cidr = "172.17.0.0/16"
#--------------------------------------------------------------------------------------------------------------------
